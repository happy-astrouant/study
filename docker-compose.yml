version: "3"
services:
  ## local eos node
  nodeos:
    container_name: server
    image: nodeos
    build:
      context: ./services/nodeos
    command:
      - nodeos
      - -e
      - -p
      - eosio
      - --http-server-address
      - "0.0.0.0:8888"
      - --plugin
      - eosio::producer_plugin
      - --plugin
      - eosio::chain_api_plugin
      - --plugin
      - eosio::http_plugin
      - --plugin
      - eosio::state_history_plugin
      - --access-control-allow-origin='*'
      - --contracts-console
      - --http-validate-host=false
      - --trace-history
      - --chain-state-history
      - --verbose-http-errors
      - --filter-on='*'
      - --disable-replay-opts
    ports:
    - 8888:8888

  ## setup accounts and deploy contract
  init:
    image: nodeos
    build:
      context: ./services/nodeos
    command:
    - /bin/bash
    - -c
    - |
      rm -fr ~/eosio-wallet
      # create the wallet
      cleos wallet create --to-console
      cleos wallet import --private-key $$EOS_PRIVATE
      cleos wallet import --private-key 5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3 #default eosio account private key
      # create master account (if needed)
      cleos -u $$EOS_API get account master || cleos -u $$EOS_API create account eosio master $$EOS_PUBLIC
      # create then contract account (if needed)
      cleos -u $$EOS_API get account $$EOS_CONTRACT_ACCOUNT || cleos -u $$EOS_API create account eosio $$EOS_CONTRACT_ACCOUNT $$EOS_PUBLIC
      # build the contract
      eosio-cpp -abigen -o iryo.wasm iryo.cpp
      # deploy the contract
      cleos -u $$EOS_API set contract $$EOS_CONTRACT_ACCOUNT . iryo.wasm iryo.abi
    volumes:
    - ./contract:/contract
    working_dir: /contract
    environment:
    - EOS_API=${EOS_NODE} # url on which nodeos is running
    - EOS_PRIVATE=${EOS_PRIVATE_KEY} # key used to sign master account
    - EOS_PUBLIC=${EOS_PUBLIC_KEY} # key used to create master account (public key of $EOS_PRIVATE)
    - EOS_CONTRACT_ACCOUNT=${EOS_CONTRACT_ACCOUNT} # account
    tty: true
    depends_on:
    - nodeos

  ## api server
  api:
    image: golang:1.12-alpine
    command:
    - /iryo/api
    volumes:
    - ./.bin:/iryo
    - ./.data:/data
    working_dir: /go/src/github.com/iryonetwork/network-poc/cmd/api
    environment:
    - IRYO_ADDR=0.0.0.0:8000
    - EOS_API=${EOS_NODE}
    - EOS_ACCOUNT=${EOS_ACCOUNT}
    - EOS_CONTRACT_ACCOUNT=${EOS_CONTRACT_ACCOUNT}
    - EOS_TOKEN_ACCOUNT=iryo.token
    - EOS_PRIVATE=${EOS_PRIVATE_KEY} # key used to sign master account
    - EOS_ACCOUNT_FORMAT=${EOS_ACCOUNT_FORMAT} # key used to sign master account
    - EOS_REQUIRES_RAM=${EOS_REQUIRES_RAM}
    - DEBUG=1
    ports:
    - 8000:8000

  ## patient server #1
  patient1:
    image: golang:1.12-alpine
    command:
    - /iryo/patient1
    volumes:
    - ./.bin:/iryo
    environment:
    - IRYO_ADDR=${IRYO_ADDR}
    - EOS_API=${EOS_NODE}
    - EOS_CONTRACT_ACCOUNT=${EOS_CONTRACT_ACCOUNT}
    - CLIENT_ADDR=0.0.0.0:9000
    - DEBUG=1
    - CLIENT_TYPE=Patient
    ports:
    - 9001:9000

  ## patient server #2
  patient2:
    image: golang:1.12-alpine
    command:
    - /iryo/patient2
    volumes:
    - ./.bin:/iryo
    environment:
    - IRYO_ADDR=${IRYO_ADDR}
    - EOS_API=${EOS_NODE}
    - EOS_CONTRACT_ACCOUNT=${EOS_CONTRACT_ACCOUNT}
    - CLIENT_ADDR=0.0.0.0:9000
    - DEBUG=1
    - CLIENT_TYPE=Patient
    ports:
    - 9002:9000

  ## doctor server #1
  doctor1:
    image: golang:1.12-alpine
    command:
    - /iryo/doctor1
    volumes:
    - ./.bin:/iryo
    environment:
    - EOS_API=${EOS_NODE}
    - IRYO_ADDR=${IRYO_ADDR}
    - EOS_CONTRACT_ACCOUNT=${EOS_CONTRACT_ACCOUNT}
    - CLIENT_ADDR=0.0.0.0:9000
    - DEBUG=1
    - CLIENT_TYPE=Doctor
    ports:
    - 9003:9000

  ## doctor server #2
  doctor2:
    image: golang:1.12-alpine
    command:
    - /iryo/doctor2
    volumes:
    - ./.bin:/iryo
    environment:
    - EOS_API=${EOS_NODE}
    - IRYO_ADDR=${IRYO_ADDR}
    - EOS_CONTRACT_ACCOUNT=${EOS_CONTRACT_ACCOUNT}
    - CLIENT_ADDR=0.0.0.0:9000
    - DEBUG=1
    - CLIENT_TYPE=Doctor
    ports:
    - 9004:9000

volumes:
  devchain:
